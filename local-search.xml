<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>利用Hexo、GitPages建立自己的博客</title>
    <link href="/2021/05/22/%E5%88%A9%E7%94%A8Hexo%E3%80%81GitPages%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <url>/2021/05/22/%E5%88%A9%E7%94%A8Hexo%E3%80%81GitPages%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Heroku上，是搭建博客的首选框架。</p><span id="more"></span><p>一般而言，建立自己的博客之后，我们会赋予它一个独特的域名。仅仅拥有<code>xxx.github.io</code>的域名，不足以满足大多数人的野心。</p><p>在这个不想学习的夜晚，我来整理一下我构建网站的过程，一来记录我的第一次前端（抄作业）项目，二来放松身心，三来给其他同学提供参考。</p><h2 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h2><ul><li>获得个人域名</li><li>GitHub创建个人仓库</li><li>安装Node.js，Hexo，git</li><li>推送网站</li><li>绑定域名</li><li>发布文章</li><li>寻找图床</li></ul><h2 id="行动"><a href="#行动" class="headerlink" title="行动"></a>行动</h2><h3 id="获得个人域名"><a href="#获得个人域名" class="headerlink" title="获得个人域名"></a>获得个人域名</h3><p>为了避免实名认证的费时费力，我选择了<a href="https://www.namesilo.com">NameSilo</a>网站，花了一美元获得了这个域名。事实上，<code>.xyz</code>域名相对价格很低，如果不是很在意的话，可以使用。</p><p>在选择域名时，有几个要点需要注意：</p><ul><li>填写Primary Address时要勾选<code>Keep my information private</code>,这样可以让保护隐私变为默认选项</li><li>除了邮箱，其他的没有必要填真实信息。手机填成真实的也无所谓。</li><li>购买域名时，注意选择<code>WHOIS Privacy</code>,让NameSilo替你成为注册人，防止真实信息暴露公网。</li><li>DNS解析时，可以填写五条解析规则。四条<code>A type</code>的规则指向GitPages的四个IPv4地址，参考<a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#configuring-an-apex-domain">GitPages 官方手册</a>；另一条规则<code>CNAME type</code>指向你的GitHub库，具体问题之后详述。</li></ul><h3 id="GitHub创建个人仓库"><a href="#GitHub创建个人仓库" class="headerlink" title="GitHub创建个人仓库"></a>GitHub创建个人仓库</h3><p>这一步相当简单。只需要在GitHub创建一个<code>用户名.github.io</code>的Repo。</p><p>顺带一提，这样做还可以顺便发现一个Special Repository，自己尝试（：</p><h3 id="安装Node-js-Hexo-git"><a href="#安装Node-js-Hexo-git" class="headerlink" title="安装Node.js, Hexo, git"></a>安装Node.js, Hexo, git</h3><p>安装是一件相当愉快的事情。<br>先安装Git，一路next即可。<br>再安装Node.js，也是一路快乐。<br>最后打开terminal，输入</p><pre><code>node -vnpm -v</code></pre><p>检查是否正确安装Node.js。之后输入</p><pre><code>npm install -g hexo-cli</code></pre><p>让它自动安装Hexo即可。</p><p>然后我们需要设置一下Git的ssh密钥，便于我们文章的发布。</p><p>打开安装好的Git Bash, 输入</p><pre><code>git config --global user.name &quot;你的GitHub用户名&quot;git config --global user.email &quot;你的GitHub注册邮箱&quot;ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</code></pre><p> 一路回车键，找到自己电脑上的User\你的Windows用户名\.ssh\id_rsa和id_rsa.pub两个文件。把后一个文件里的全部内容复制，粘贴到GitHub个人页面右上角下拉框-&gt;Settings-&gt;SSH and GPG keys-&gt; SSH Keys -&gt; New SSH keys这个界面中，添加即可。</p><p> 这里应该有图片的，我之后再传吧。</p><p> 回到Git Bash,输入</p><pre><code> ssh git@github.com</code></pre><p>多输几次，不报错了就好了。（玄学X</p><h3 id="推送网站"><a href="#推送网站" class="headerlink" title="推送网站"></a>推送网站</h3><p>随便打开一个你想要放置博客的目录，打开terminal，定位到此处，输入</p><pre><code>hexo init</code></pre><p>hexo就会在该目录下创建博客的基本内容。网络不好就挂代理，我反正下了几遍才下好。</p><p>继续输入</p><pre><code>hexo new testhexo generatehexo server</code></pre><p>打开浏览器进入网址localhost:4000，即可看到你的博客——最原始的样子。</p><p>这是本地预览，怎么放到网上呢？GitPages就是一个好的部署地点！</p><p>在设置之前，需要解释一个概念，在blog根目录里的_config.yml文件称为<strong>站点配置文件</strong>，进入根目录里的themes文件夹，里面也有个_config.yml文件，这个称为<strong>主题配置文件</strong>。</p><p>打开前一个站点配置文件，找到deploy这个单词，填充如下内容：</p><pre><code>deploy:  type: git  repo: git@github.com/GitHub用户名/GitHub用户名.github.io.git  branch: main</code></pre><p>注意repo使用git@才能ssh登录，改成https的话，每次deploy都需要输入密码，烦都烦死了。<br>再注意branch 要使用main，因为GitHub整顿后，将新Repo的默认分支从<code>master</code> 改成了<code>main</code>。不讨论political Correctness。</p><p>回到项目根目录，打开terminal，输入</p><pre><code>npm install hexo-deployer-git --save</code></pre><p>和</p><pre><code>hexo cleanhexo ghexo d</code></pre><p>网络足够好的情况下，可以在网址<code>GitHub用户名.github.io</code>上看到你的博客了。</p><h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><p>打开你的GitHub，在博客Repo的Settings里面，找到左侧Pages，点进去，右边找到Custom domain，填入你先前注册的域名，再勾选下面的Enforce HTTPS，就搞定了。</p><p>这时候可以回到第一步，把 <code>GitHub用户名.github.io</code>填入先前DNS解析的步骤。Host name填入www, 这样也可以解析www.开头的你的域名。</p><p>我觉得需要图片，到时候再说。</p><p>假说你博客的根目录是/，现进入/source目录，理论上应该有一个<code>_posts</code>文件夹。在它的旁边创建名为<code>CNAME</code>的文件，输入<strong>不带www</strong>的你的域名。</p><p>这时候打开浏览器在地址栏输入你的个性化域名将会直接进入你自己搭建的网站。如果没有，就deploy几次（莽撞</p><p>不需要改动_config.yml里面的内容。</p><h3 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h3><p>啊嘞，这个不需要我解释吧。在terminal里使用</p><pre><code>hexo new 文章名</code></pre><p>即可创建一篇文章，位于/source/_posts/目录下的一个.md文件。</p><p>用markdown语法写文章即可。</p><p>发布？<br>在terminal里使用</p><pre><code>hexo cleanhexo generatehexo deploy</code></pre><p>即可发布到你的GitHub Repo上，从而在你的域名上可见。</p><p>建议是先用<code>hexo server</code>在本地预览，给GitHub送去一点善意。</p><p>如果发现发布后主页没有变化，可以尝试重新<code>hexo clean</code>再deploy一次。熟悉这样的节奏就好。</p><h3 id="寻找图床"><a href="#寻找图床" class="headerlink" title="寻找图床"></a>寻找图床</h3><p>图床自己找。我用的是<a href="https://imgtu.com">路过图床</a>，虽然有广告，但是它免费（：</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这就是颓废大学生摸鱼的方式吗？！<br>更多资料自己寻找（：</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://zhuanlan.zhihu.com/p/26625249">吴润-知乎</a></p><p><a href="http://wangwlj.com/2017/09/08/blog_setup/">wangwlj’s Blog</a></p><p><a href="https://hexo.io/zh-cn/docs/">Hexo 官方文档</a></p><p><a href="https://hexo.fluid-dev.com/docs/guide/">Fluid 配置文档</a></p>]]></content>
    
    
    <categories>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>旧文章归档</title>
    <link href="/2021/05/21/%E6%97%A7%E6%96%87%E7%AB%A0%E5%BD%92%E6%A1%A3/"/>
    <url>/2021/05/21/%E6%97%A7%E6%96%87%E7%AB%A0%E5%BD%92%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<p>正式开始记录文档之前，这里发布了一些奇怪的日常类文章。整理于此，不占用过多空间。</p><span id="more"></span><h2 id="新世界的起始点"><a href="#新世界的起始点" class="headerlink" title="新世界的起始点"></a>新世界的起始点</h2><p>2021-05-21 20:12:16</p><p>或许，这会是一个新的起点。</p><p>这是一篇我在学会markdown之前写的文章，可能格式特别垃圾（就是垃圾）。</p><p>从产生这个奇怪的想法，到真正实现一个照抄的博客，用了大概一天？<br>主要原因是网络比较差，而且相关知识不够充足。</p><p>我都干了什么？</p><ol><li><p>查询相关资料，选择Hexo作为使用的静态博客框架。</p></li><li><p>查询科大FTP使用方法，考虑在这上面搭建。结果失败，因为不会HTML知识。</p></li><li><p>决定在GitHub上搭建网页，使用简陋的JavaScript把我的FTP主页导向GitHub主页。</p></li><li><p>调git，因为网络不好，而且教程给错了指令，造成登录异常。一定要注意<br>GitHub repository网址是不是https，如果是就不能用密钥登录了，<br>需要换成git@github.com:username/repositoryname, 即ssh登录。</p></li><li><p>调Hexo，因为网络不好，经常上传失败。</p></li><li><p>了解新的theme，选定了Fluid。不为别的，就是因为默认的不好看。</p></li></ol><p>流水账到此为止，我需要去写作业了（可怜的科大学生</p><p>今后这个博客会更新一些日常、知识梳理、骂街。主要是我懒得发QQ动态了，显得不成熟。</p><p>祝你生活顺利！</p><h2 id="我站有待完成的事情"><a href="#我站有待完成的事情" class="headerlink" title="我站有待完成的事情"></a>我站有待完成的事情</h2><p>2021-05-22 00:29:48</p><p>为了提高我站的规划水平，我仍需要做的工作包括：</p><ul><li>绑定域名</li><li>调整主题个性化设置</li><li>学习markdown语法</li><li>使用图床</li><li>添加个性化控件，就像前些年的个人博客一样</li><li>学习前端知识</li><li>SEO、评论系统、个人头像、博客分享、订阅功能、High功能、404网页设置</li></ul><p>但，最重要的是，我的课内学习太差了（哭，没时间瞎玩了。</p><p>所以，目前先好好学习吧。</p><h2 id="特大利好消息"><a href="#特大利好消息" class="headerlink" title="特大利好消息"></a>特大利好消息</h2><p>2021-05-22 13:37:48</p><p><strong>好消息</strong> 本站获得了全新域名<a href="https://pickupthefall.xyz">https://pickupthefall.xyz</a></p><p>经历了两个小时的资料查找，终于实现了域名解析的设置。毕竟是没有一点网络知识，费点功夫还是很正常的。</p><p>我的域名是从<a href="https://www.namesilo.com/">Namesilo</a>购买，一共花了不到七块钱（</p><p>主要原因是.xyz真的很便宜。</p><p>GitHub是如何实现这样的域名跳转呢？</p><p>在Namesilo的DNS设置中，我们可以让自定义域名导向GitPage的四个IPv4地址。然后在GitHub上设置depository的CNAME，这样在接收到来自我们域名的访问时，GitPage就会返回我们的depository，从而实现域名解析和跳转。</p><p>听起来很妙，实现起来也很美观（</p><p>下一步，图床！希望这个不会花太多时间。$:)$</p><p>事实上，图床我已经搞定了！我站使用<a href="https://imgtu.com/">路过图床</a>，可以免费提供图片上传和加载。主要是我没钱（</p><p>值得一提的是，这里使用的markdown解释器不支持提前换行。<br>对于LaTeX转markdown选手有点不友好（</p>]]></content>
    
    
    
    <tags>
      
      <tag>日常</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
